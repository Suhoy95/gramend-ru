m4_include(`gramend-main.m4')m4_dnl
articleHeader(<<<1. Регистры - Изучая SD карты>>>)m4_dnl
<main>
<h1>Изучая SD карты</h1>

<p>
    Этот цикл статей посвящен работе с SD картами памяти SD карты памяти, в особенности появившиеся в 2005 microSD карты,
    стали распространены
</p>

<h3> 0.1 Эволюция объема SD карт</h3>

<table>
    <caption>Классы SD памяти разного объема</caption>
    <thead>
        <tr>
            <th>Аббревиатура</th>
            <th>Дата ревизии спецификации</th>
            <th>Максимальный Адресуемый Объем</th>
            <th>Расшифровка</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>SDSC</td>
            <td>3 Апреля 2006/1.1</td>
            <td>2<sup>0</sup> * 2<sup>32</sup> = 2 GiB</td>
            <td>Standard Capacity</td>
        </tr>
        <tr>
            <td>SDHC</td>
            <td>25 Сентября 2006/2.0</td>
            <td>32 GiB</td>
            <td>High Capacity</td>
        </tr>
        <tr>
            <td>SDXC</td>
            <td>18 Мая 2010/3.01</td>
            <td>2<sup>9</sup> * 2<sup>32</sup> = 2 TiB</td>
            <td>eXtended Capacity</td>
        </tr>
        <tr>
            <td>SDUC</td>
            <td>25 Марта 2020/7.10</td>
            <td>2<sup>16</sup> * 2<sup>32</sup> = 128 TiB</td>
            <td>Ultra Capacity</td>
        </tr>
    </tbody>
</table>

<h2>1. Регистры</h2>

<h3>1.1 OCR - Operation Condition Register (32 bits / 4 bytes)</h3>

m4_define(<<<ocr_row>>>,<<<
<tr>
    <td>$1</td>
    <td>$2</td>
    <td>$3</td>
</tr> >>>)m4_dnl
<table>
    <caption>Структура OCR</caption>
    <thead>
        <tr>
            <th>Биты</th>
            <th>Поле</th>
            <th>Расшифровка Значений</th>
        </tr>
    </thead>
    <tbody>
    ocr_row(<<<[0:6]>>>, зарезервировано, <<<=0 (shall)>>>)
    ocr_row(<<<[7]>>>, <<<Low Voltage Range>>>, <<<>>>)
    ocr_row(<<<[8:14]>>>, зарезервировано, <<<=0 (shall)>>>)
    ocr_row(<<<[15]>>>, <<<2.7-2.8 Вольт>>>, <<<>>>)
    ocr_row(<<<[16]>>>, <<<2.8-2.9 Вольт>>>, <<<>>>)
    ocr_row(<<<[17]>>>, <<<2.9-3.0 Вольт>>>, <<<>>>)
    ocr_row(<<<[18]>>>, <<<3.0-3.1 Вольт>>>, <<<>>>)
    ocr_row(<<<[19]>>>, <<<3.1-3.2 Вольт>>>, <<<>>>)
    ocr_row(<<<[20]>>>, <<<3.2-3.3 Вольт>>>, <<<>>>)
    ocr_row(<<<[21]>>>, <<<3.3-3.4 Вольт>>>, <<<>>>)
    ocr_row(<<<[22]>>>, <<<3.4-3.5 Вольт>>>, <<<>>>)
    ocr_row(<<<[23]>>>, <<<3.5-3.6 Вольт>>>, <<<>>>)
    ocr_row(<<<[24]>>>, <<<S18A>>>, <<<Только для UHS-I>>>)
    ocr_row(<<<[25:26]>>>, <<<зарезервировано>>>, <<<=0 (shall)>>>)
    ocr_row(<<<[27]>>>, <<<CO2T>>>, <<<Over 2 TB support. Только для SDUC>>>)
    ocr_row(<<<[28]>>>, <<<зарезервировано>>>, <<<=0 (shall)>>>)
    ocr_row(<<<[29]>>>, <<<UHS-II Card Status>>>)
    ocr_row(<<<[30]>>>, <<<CCS - Card Capacity Status>>>, <<<0 - SDSC, 1 - SDHC или SDXC>>>)
    ocr_row(<<<[31]>>>, <<<busy / power up>>>, <<<>>>)
    </tbody>
</table>

<h4>OCR[31]:power up бит - Внутренняя карта памяти</h4>

<p>
    В начале работы с картой памяти хост должен убедиться, что карта проинициализировалась
    и готова работать с хостом. Для этого, во время включения карты памяти,
    карта будет возвращать хосту OCR с битом OCR[31] установленным в 0, что должно
    предостеречь хост от последующей работы карты.
</p><p>
    Как только инициализация внутренних структур произойдет, карта установит OCR[31]
    в 1 в знак завершения процедуры включения карты памяти. Только после этого момента
    хосту следует переходить к последующему изучению OCR.
</p>

<h4>OCR[30]:CCS - SDSC или SDHC/SDXC? OCR[27]:CO2T - SDUC?</h4>

<p>
    Дождавшись OCR[31]:power up = 1, хост может узнать тип объема карты памяти.
    Бит OCR[30] = 0 будет означать карты памяти SDSC, а OCR[30] = 1 - SDHC или
    SDXC.
</p><p>
    Помимо этого, в спецификации обозначен OCR[27]:CO2T поддерживаемый только
    картами SDUC. Других деталей по этому поводу в описании OCR нет.
</p>

<h4>Поддерживаемый картой диапазон напряжения</h4>



<h3>1.2 CID - Card IDentification (128 bits / 16 bytes)</h3>



<h3>1.3 CSD - Card Specific Data (128 bits / 16 bytes)</h3>

m4_define(<<<csd_row>>>,<<<
    <tr>
        <td>$1</td>
        <td>$2</td>
        <td>$3</td>
        <td>$4</td>
        <td>$5</td>
    </tr> >>>)m4_dnl
<table>
    <thead>
        <tr>
            <th>Биты (0)</th>
            <th>Биты (1)</th>
            <th>Биты (2)</th>
            <th>Поле</th>
            <th>Комментарий</th>
        </tr>
    </thead>
    <tbody>
        csd_row(<<<[127:126](2) 00b>>>, <<<01b>>>, <<<>>>, <<<CSD_STRUCTURE>>>, <<<0 - SDSC, 1 - SDHC || SDXC, 2 - SDUC>>>)
        csd_row(<<<[125:120](6) 00 0000b>>>, <<<->>>, <<<>>>, <<<reserved>>>, <<<>>>)
        csd_row(<<<[119:112](8) xxh>>>, <<<0Eh>>>, <<<>>>, <<<TAAC>>>, <<<>>>)
        csd_row(<<<[111:104](8) xxh>>>, <<<00h>>>, <<<>>>, <<<NSAC>>>, <<<>>>)
        csd_row(<<<[103:96](8) 32h || 5Ah>>>, <<<32h, 5Ah, 0Bh, 2Bh>>>, <<<>>>, <<<TRAN_SPEED>>>, <<<>>>)
        csd_row(<<<[95:84](12) 01x1 1011 0101b>>>, <<<x1x1 1011 01x1b>>>, <<<>>>, <<<CCC>>>, <<<>>>)
        csd_row(<<<[83:80](4) xh>>>, <<<9>>>, <<<>>>, <<<READ_BL_LEN>>>, <<<>>>)
        csd_row(<<<[79](1) 1b>>>, <<<0>>>, <<<>>>, <<<READ_BL_PARTIAL>>>, <<<>>>)
        csd_row(<<<[78](1) xb>>>, <<<0>>>, <<<>>>, <<<WRITE_BLK_MISALIGN>>>, <<<>>>)
        csd_row(<<<[77](1) xb>>>, <<<0>>>, <<<>>>, <<<READ_BLK_MISALIGN>>>, <<<>>>)
        csd_row(<<<[76](1) xb>>>, <<<xb>>>, <<<>>>, <<<DSR_IMP>>>, <<<>>>)
        csd_row(<<<[75:74](2) 00b>>>, <<<>>>, <<<>>>, <<<reserved>>>, <<<>>>)
        csd_row(<<<[73:62](12) xxxh>>>, <<<>>>, <<<>>>, <<<C_SIZE>>>, <<<>>>)
        csd_row(<<<[61:59](3) xxxb>>>, <<<>>>, <<<>>>, <<<VDD_R_CURR_MIN>>>, <<<>>>)
        csd_row(<<<[58:56](3) xxxb>>>, <<<>>>, <<<>>>, <<<VDD_R_CURR_MAX>>>, <<<>>>)
        csd_row(<<<[55:53](3) xxxb>>>, <<<>>>, <<<>>>, <<<VDD_W_CURR_MIN>>>, <<<>>>)
        csd_row(<<<[52:50](3) xxxb>>>, <<<>>>, <<<>>>, <<<VDD_W_CURR_MAX>>>, <<<>>>)
        csd_row(<<<[49:47](3) xxxb>>>, <<<>>>, <<<>>>, <<<C_SIZE_MULT>>>, <<<>>>)
        csd_row(<<<[46](1) xb>>>, <<<1b>>>, <<<>>>, <<<ERASE_BLK_EN>>>, <<<>>>)
        csd_row(<<<[45:39](7) xx xxxxb>>>, <<<7Fh>>>, <<<>>>, <<<SECTOR_SIZE>>>, <<<>>>)
        csd_row(<<<[38:32](7) xx xxxxb>>>, <<<00 0000b>>>, <<<>>>, <<<WP_GRP_SIZE>>>, <<<>>>)
        csd_row(<<<[31](1) xb>>>, <<<0>>>, <<<>>>, <<<WP_GRP_ENABLE>>>, <<<>>>)
        csd_row(<<<[30:29](2) 00b>>>, <<< - >>>, <<<>>>, <<<reserved>>>, <<<>>>)
        csd_row(<<<[28:26](3) xxxb>>>, <<<010b>>>, <<<>>>, <<<R2W_FACTOR>>>, <<<>>>)
        csd_row(<<<[25:22](4) xxxxb>>>, <<<9>>>, <<<>>>, <<<WRITE_BL_LEN>>>, <<<>>>)
        csd_row(<<<[21](1) xb>>>, <<<0>>>, <<<>>>, <<<WRITE_BL_PARTIAL>>>, <<<>>>)
        csd_row(<<<[20:16](5) 0 0000b>>>, <<< - >>>, <<<>>>, <<<reserved>>>, <<<>>>)
        csd_row(<<<[15](1) xb>>>, <<<0>>>, <<<>>>, <<<FILE_FORMAT_GRP>>>, <<<>>>)
        csd_row(<<<[14](1) xb>>>, <<<xb>>>, <<<>>>, <<<COPY>>>, <<<>>>)
        csd_row(<<<[13](1) xb>>>, <<<xb>>>, <<<>>>, <<<PERM_WRITE_PROTECT>>>, <<<>>>)
        csd_row(<<<[12](1) xb>>>, <<<xb>>>, <<<>>>, <<<TMP_WRITE_PROTECT>>>, <<<>>>)
        csd_row(<<<[11:10](2) xxb>>>, <<<00b>>>, <<<>>>, <<<FILE_FORMAT>>>, <<<>>>)
        csd_row(<<<[9:8](2) 00b>>>, <<< - >>>, <<<>>>, <<<reserved>>>, <<<>>>)
        csd_row(<<<[7:1](7) xxx xxxxb>>>, <<< - >>>, <<<>>>, <<<CRC>>>, <<<>>>)
        csd_row(<<<[0](1) 1b>>>, <<< - >>>, <<<>>>, <<<not used, always 1>>>, <<<>>>)
    </tbody>
</table>

</main>

gramendFooter(
    <<<img/14.gif>>>)